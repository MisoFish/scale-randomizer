{"ast":null,"code":"import _slicedToArray from \"/Users/LightCycle/git/MisoFish.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/LightCycle/git/MisoFish.github.io/src/components/App.js\";\nimport React, { useState } from \"react\";\nimport _ from \"lodash\";\nimport { Grid } from \"@material-ui/core\"; //import { ThemeProvider } from \"@material-ui/core/styles\";\n\nimport Randomizer from \"./Randomizer\";\nimport LevelSelected from \"./LevelSelected\";\nimport LevelSelector from \"./LevelSelector\";\nimport Header from \"./Header\";\nimport { LOWEST_LEVEL, HIGHEST_LEVEL_PLUS_1 } from \"../Constants\";\n\nconst App = () => {\n  //localStorage.clear();\n  const _useState = useState(localStorage.getItem(\"level\")),\n        _useState2 = _slicedToArray(_useState, 2),\n        level = _useState2[0],\n        setLevel = _useState2[1];\n\n  const selectLevel = level => {\n    localStorage.setItem(\"level\", level);\n    setLevel(level);\n  };\n\n  const changeLevel = () => {\n    localStorage.clear();\n    setLevel(\"\");\n  };\n\n  if (_.inRange(level, LOWEST_LEVEL, HIGHEST_LEVEL_PLUS_1)) {\n    //console.log(level);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Randomizer, {\n      level: level,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(LevelSelected, {\n      level: level,\n      onChange: changeLevel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }))));\n  } else {\n    //console.log(\"level not in range\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(LevelSelector, {\n      onChange: selectLevel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n  }\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/LightCycle/git/MisoFish.github.io/src/components/App.js"],"names":["React","useState","_","Grid","Randomizer","LevelSelected","LevelSelector","Header","LOWEST_LEVEL","HIGHEST_LEVEL_PLUS_1","App","localStorage","getItem","level","setLevel","selectLevel","setItem","changeLevel","clear","inRange"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,IAAT,QAAqB,mBAArB,C,CACA;;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,YAAT,EAAuBC,oBAAvB,QAAmD,cAAnD;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB;AADgB,oBAEUT,QAAQ,CAACU,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAFlB;AAAA;AAAA,QAETC,KAFS;AAAA,QAEFC,QAFE;;AAIhB,QAAMC,WAAW,GAAGF,KAAK,IAAI;AAC3BF,IAAAA,YAAY,CAACK,OAAb,CAAqB,OAArB,EAA8BH,KAA9B;AACAC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAHD;;AAKA,QAAMI,WAAW,GAAG,MAAM;AACxBN,IAAAA,YAAY,CAACO,KAAb;AACAJ,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAHD;;AAKA,MAAIZ,CAAC,CAACiB,OAAF,CAAUN,KAAV,EAAiBL,YAAjB,EAA+BC,oBAA/B,CAAJ,EAA0D;AACxD;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAEI,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,EASE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAEA,KAAtB;AAA6B,MAAA,QAAQ,EAAEI,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CADF,CADF;AAiBD,GAnBD,MAmBO;AACL;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,aAAD;AAAe,MAAA,QAAQ,EAAEF,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;AACF,CA1CD;;AA4CA,eAAeL,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport _ from \"lodash\";\nimport { Grid } from \"@material-ui/core\";\n//import { ThemeProvider } from \"@material-ui/core/styles\";\n\nimport Randomizer from \"./Randomizer\";\nimport LevelSelected from \"./LevelSelected\";\nimport LevelSelector from \"./LevelSelector\";\nimport Header from \"./Header\";\nimport { LOWEST_LEVEL, HIGHEST_LEVEL_PLUS_1 } from \"../Constants\";\n\nconst App = () => {\n  //localStorage.clear();\n  const [level, setLevel] = useState(localStorage.getItem(\"level\"));\n\n  const selectLevel = level => {\n    localStorage.setItem(\"level\", level);\n    setLevel(level);\n  };\n\n  const changeLevel = () => {\n    localStorage.clear();\n    setLevel(\"\");\n  };\n\n  if (_.inRange(level, LOWEST_LEVEL, HIGHEST_LEVEL_PLUS_1)) {\n    //console.log(level);\n    return (\n      <div>\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n            <Header />\n          </Grid>\n          <Grid item xs={12}>\n            <Randomizer level={level} />\n          </Grid>\n        \n        \n          <Grid item xs={12}>\n            <LevelSelected level={level} onChange={changeLevel} />\n          </Grid>\n        </Grid>\n      </div>\n    );\n  } else {\n    //console.log(\"level not in range\");\n    return (\n      <div>\n        <Header />\n        <LevelSelector onChange={selectLevel} />\n      </div>\n    );\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}